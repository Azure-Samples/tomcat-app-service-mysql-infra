version: '3.8'

volumes:
  mysql-data:

services:
  app:
    container_name: javadev
    build:
      context: .
      dockerfile: Dockerfile
    environment: 
      # NOTE: MYSQL_HOST/DATABASE/USER/PASSWORD should match values in db container
      MYSQL_URL: jdbc:mysql://${ENV_DB_HOST}:3306/${ENV_DB_DATABASE}
      MYSQL_HOST: ${ENV_DB_HOST}
      MYSQL_DATABASE: ${ENV_DB_DATABASE}
      MYSQL_USER: ${ENV_DB_USER}
      MYSQL_PASSWORD: ${ENV_DB_PASSWORD}

    volumes:
      - ../..:/workspaces:cached

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    network_mode: service:db

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. 
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  db:
    container_name: ${ENV_DB_HOST}
    image: mysql:8.3
    restart: unless-stopped
    volumes:
      - mysql-data:/var/lib/mysql
    environment: 
      # NOTE: MYSQL_HOST/DATABASE/USER/PASSWORD should match values in app container
      MYSQL_DATABASE: ${ENV_DB_DATABASE}
      MYSQL_USER: ${ENV_DB_USER}
      MYSQL_PASSWORD: ${ENV_DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${ENV_DB_ROOT_PASSWORD}

    # Add "forwardPorts": ["3306"] to **devcontainer.json** to forward MySQL locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  redis:
    image: redis
    restart: unless-stopped
